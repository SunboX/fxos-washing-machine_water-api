{
  "name": "simplegeoloc",
  "description": "SimpleGeoLoc simple items with geolocation, near items function",
  "keywords": [
    "geolocation",
    "javascript",
    "longitude",
    "latitude"
  ],
  "version": "0.0.1",
  "author": {
    "name": "Angel 'Java' Lopez",
    "email": "webmaster@ajlopez.com",
    "url": "http://www.ajlopez.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/ajlopez/SimpleGeoLoc.git"
  },
  "main": "./lib/simplegeoloc.js",
  "engines": {
    "node": ">= 0.6.0 && < 0.13.0"
  },
  "scripts": {
    "test": "simpleunit test"
  },
  "dependencies": {},
  "devDependencies": {
    "simpleunit": "0.0.2"
  },
  "readme": "# SimpleGeoLoc\n\nSimple geolocation functions. Add items with geolocation information, then find items near a point/distance.\n\n## Usage\n\n## Installation\n\nVia npm on Node:\n\n```\nnpm install simplegeoloc\n```\n\n## Usage\n\nReference in your program:\n\n```js\nvar sgl = require('simplegeoloc');\n```\n\nCreate an item store:\n```js\nvar store = sgl.createStore();\n```\n\nAdd items to store:\n```js\nstore.add(latitude, longitude, item);\n```\n\nExamples:\n```js\nstore.add(-34.47706, -58.50177, { city: 'Acassuso', geoname_id: 3436508 });\nstore.add(-34.74471, -58.40410, { city: 'Banfield', geoname_id: 3436152 });\n```\n\nItems near to a point:\n```js\nvar items = store.near(-34.47706, -58.50177);\n```\nThe returned value is a JavaScript array. Each element has properties `latitude`, `longitude`, `item` (with the original associated item data).\n\n## Versions\n\n- 0.0.1 Published, naive near implementation, visiting all items, using haversine function for distances\n\n## To Do\n\n- First sample\n- Improve near implementation, partitioning items using an internal grid, then, visiting all the items in near cells instead of all the item list\n- New input format for position (latitude, longitude as strings; degree, minutes, seconds format `12° 20.736′ N, 98° 45.924′ W`, etc)\n\n## License\n\nMIT\n\n## References\n\n- [Geotagging](http://en.wikipedia.org/wiki/Geotagging) with lat/long formats\n- [Geographic coordinate system](http://en.wikipedia.org/wiki/Geographic_coordinate_system)\n- [How to convert address (as text) to gps coordinates?](http://stackoverflow.com/questions/6996577/how-to-convert-address-as-text-to-gps-coordinates)\n- [The Google Geocoding API](https://developers.google.com/maps/documentation/geocoding/?csw=1)\n- [Free Geocoding Utilities at GPSVisualizer.com](http://www.gpsvisualizer.com/geocoding.html)\n- [Calculate distance between 2 GPS coordinates](http://stackoverflow.com/questions/365826/calculate-distance-between-2-gps-coordinates)\n- [Calculate distance, bearing and more between Latitude/Longitude points](http://www.movable-type.co.uk/scripts/latlong.html) See accuracy note, for error due to use medium earth radius\n- [What is the distance between a degree of latitude and longitude?](http://geography.about.com/library/faq/blqzdistancedegree.htm)\n- [Earth Radius](http://en.wikipedia.org/wiki/Earth_radius)\n\n## Contribution\n\nFeel free to [file issues](https://github.com/ajlopez/SimpleGeoLoc) and submit\n[pull requests](https://github.com/ajlopez/SimpleGeoLoc/pulls) — contributions are\nwelcome<\n\nIf you submit a pull request, please be sure to add or update corresponding\ntest cases, and ensure that `npm test` continues to pass.\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/ajlopez/SimpleGeoLoc/issues"
  },
  "homepage": "https://github.com/ajlopez/SimpleGeoLoc",
  "_id": "simplegeoloc@0.0.1",
  "_shasum": "abd933853dbb016cda01cbc49c4d4279a6a2c6b4",
  "_from": "simplegeoloc@",
  "_resolved": "https://registry.npmjs.org/simplegeoloc/-/simplegeoloc-0.0.1.tgz"
}
